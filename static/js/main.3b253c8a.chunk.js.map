{"version":3,"sources":["bg.jpg","fonts/Tavisha.otf","Component.js","Component2.js","App.js","serviceWorker.js","index.js","Resume.pdf"],"names":["module","exports","onClick1","link","window","open","onClick3","c1Style","color","margin","marginTop","height","display","flexDirection","backgroundColor","border","outline","marginLeft","justifyContent","buttonStyle","App","from","opacity","to","delay","props","style","className","src","img","onClick","size","method","action","pdf","target","hStyle","props2","href","Component","Component2","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b253c8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.e373bc70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tavisha.4a2775dd.otf\";","import React from 'react';\r\nimport {Spring} from 'react-spring/renderprops';\r\nimport { FaLinkedin, FaGithubSquare } from 'react-icons/fa';\r\nimport { IoMdDownload } from \"react-icons/io\";\r\nimport {Link} from 'react-router-dom';\r\nimport pdf from './Resume.pdf';\r\nimport img from './bg.jpg';\r\n\r\nconst onClick1=(link)=>{\r\n  window.open(\r\n    `https://github.com/4bdulWadood`,\r\n    '_blank' \r\n  );\r\n}\r\n\r\n\r\nconst onClick3=(link)=>{\r\n  window.open(\r\n    `https://www.linkedin.com/in/syed-wadood-6b083861/`,\r\n    '_blank' \r\n  );\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Spring\r\n      from={{opacity: 0,marginLeft: -500 }}\r\n      to={{opacity: 1, marginLeft: 0 }}\r\n      delay={500}\r\n    >\r\n    {props => (\r\n      <div style={props} className=\"left\">\r\n      <img className=\"image\" src={img} />\r\n      <div className=\"style1\">\r\n      <div style={c1Style}>\r\n        <h1 style={{\"font-family\": \"Tavisha\", \"font-size\": \"2.75rem\"}}><div className=\"resizeHeight\">\r\n          <Spring\r\n            from={{ opacity: 0 }}\r\n            to={{ opacity: 1 }}\r\n            delay={800}\r\n            >\r\n            {props => <div style={{...props, marginTop: \"-15%\"}}>Hi, I'm Syed.</div>}\r\n            \r\n          </Spring></div></h1>\r\n      </div>\r\n      <div className=\"social\">\r\n      <div style={height}>\r\n      <button style={buttonStyle} onClick={onClick1}><FaGithubSquare size={30}/></button> \r\n      <form method=\"get\" action={pdf} target=\"_blank\"><button style={buttonStyle}><IoMdDownload size={30}/></button></form>\r\n      <button style={buttonStyle} onClick={onClick3}><FaLinkedin size={30}/></button>    \r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    )\r\n    }\r\n    </Spring>\r\n  )\r\n}\r\n\r\nconst c1Style = {\r\n  color: '#f5f5f5',\r\n  margin: \"-10.7rem 0 0 0\",\r\n  marginTop: \"-10%\"\r\n}\r\n\r\nconst height = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  backgroundColor: \"#622e2e\",\r\n  border: \"none\",\r\n  outline: \"none\",\r\n  marginLeft: \"-62%\",\r\n  justifyContent: \"center\",\r\n  marginTop: \"-50%\"\r\n}\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: \"#622e2e\", \r\n  border: \"none\",\r\n  outline: \"none\"\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {Spring} from 'react-spring/renderprops';\r\n\r\nfunction App() {\r\n  return (\r\n    <Spring\r\n      from={{opacity: 0 }}\r\n      to={{opacity: 1 }}\r\n      delay={800}\r\n    >\r\n    {props => (\r\n      <div style={props} className=\"right\">\r\n      <h1 style={props2}>About Me</h1>\r\n      <p>Hey there! My name is Syed Abdul Wadood, I am an engineering student who loves to solve difficult problems using my technical toolset and communication skills. <l style={ hStyle }>I am currently looking for a Summer 2021 internship.</l></p>\r\n      <p className=\"italic\">I am experienced in Java, C, and JavaScript</p>\r\n      <h1 style={{ height: '1.5rem' }}>Work Experience</h1>\r\n      <h2>Alpha Coding</h2>\r\n      <p2>December 2019 — September 2020</p2>\r\n      <p>Created course curriculum for students using moodle.</p>\r\n      <p>Taught advanced JavaScript and Python concepts including Object Oriented Programming and Natural Language Processing.</p>\r\n      <h2>Ryerson AI</h2>\r\n      <p2>December 2019 — September 2020</p2>\r\n      <p>Developed <l style={ hStyle }>RyersonAI's App</l> with React Native, Typescript, GitLab and Figma</p>\r\n      <p>Gathered requirements, designed the solution architecture, and worked with a team of developers.</p>\r\n      <h2>Andie.Work</h2>\r\n      <p2>December 2020 — May 2021</p2>\r\n      <p>Assisted with the development of the <l style={ hStyle }>Andie app</l> with React Native</p>\r\n      <p>Worked with ReactJS to develop the front-end and Django to develop the server side. </p>\r\n      <p>Used BitBucket for collaboration and CI/CD.</p>\r\n      <h1 style={{ height: '1.5rem' }}>Projects</h1>\r\n      <h2>Chirper</h2>\r\n      <p2>August 2020<a target=\"_blank\" href=\"https://github.com/4bdulWadood/ChirperSocialMedia\"><button className = \"button\">Project</button></a><a target=\"_blank\" href=\"https://www.youtube.com/watch?v=rxy0JVqLVO0&feature=youtu.be\"><button className = \"button\">Demo</button></a></p2>\r\n      <p>Developed a twitter clone using ReactJS, Express, NodeJS, and MongoDB</p>\r\n      <p>Used Socket.io to establish realtime communication between users.</p>\r\n      <p>Created a friend recommendation engine using MongoDB's aggregation framework.</p>\r\n      <h2>Parking Application</h2>\r\n      <p2>August 2020<a target=\"_blank\" href=\"https://github.com/4bdulWadood/Coe528-Design-Project\"><button className = \"button\">Project</button></a><a target=\"_blank\" href=\"https://www.loom.com/share/4dbc6771b5c24cb7a78d0d69d25517c9?fbclid=IwAR3uR7wPCf7Py3JggJalPxfPdpDG5xbn2p0Auk4nHe6b49QBdndHmafhupI\"><button className = \"button\">Demo</button></a></p2>\r\n      <p>Utilized Java, OOP, and UML diagrams to develop kiosk application for car parking facility</p>\r\n      <p>Developed user interface with JavaFX</p>\r\n      </div>\r\n    )\r\n    }\r\n    </Spring>\r\n  );\r\n}\r\nconst hStyle = { color: 'red' };\r\n\r\nconst props2 = { height: '2rem' };\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport Component1  from './Component'\r\nimport Component2  from './Component2'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Component1/>\r\n      <Component2/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './fonts/Tavisha.otf'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Resume.9d109fd4.pdf\";"],"sourceRoot":""}